#+title: Arch Linux Installation
#+description: Guide for an Arch Linux install
#+author: Carlos Reyes

* TABLE OF CONTENTS :toc:
- [[#pre-installation][Pre-installation]]
- [[#installation][Installation]]
  - [[#disk-formatting][Disk formatting]]
  - [[#mount-and-pacstrap][Mount and Pacstrap]]
  - [[#generating-fstab][Generating Fstab]]
  - [[#localtime-locale-and-extra-config][Localtime, locale and extra config]]
- [[#grub-installation][Grub Installation]]
- [[#qtile-installation][Qtile Installation]]
- [[#post-install][Post install]]
- [[#exit-and-reboot][Exit and Reboot]]

* Pre-installation
Image to USB:
#+begin_src bash
sudo dd if=archlinux-version-x86_64.iso of=/dev/sdb bs=4M
#+end_src
* Installation
You need to make sure you have working Internet, if you are using WiFi then you need to connect your device using iwctl.
#+begin_src bash
# IWCTL COMMANDS
iwctl
device list
station <device> scan
station <device> get-networks
station <device> connect "WIFI"
#+end_src
If you are connected through a Proxy Server you need to do the following:
#+begin_src bash
export http_proxy=http://user:pass@proxy.direction.com:port
export https_proxy=$http_proxy
#+end_src
Once you check you have working Internet you can move forward
#+begin_src bash
timedatectl set-ntp true
timedatectl status
#+end_src
Be careful at this step:
#+begin_src bash
#Formatting Disks
cfdisk
#+end_src
My personal Disk partition:

| Disk | Type             | Capacity |
|------+------------------+----------|
| sda1 | EFI              | 550M     |
| sda2 | Swap             | 4G       |
| sda3 | Linux Filesystem | All      |

** Disk formatting
#+begin_src bash
#EFI
mkfs.fat -F32 /dev/sda1

#SWAP
mkswap /dev/sda2
swapon /dev/sda2

#EXT4
mkfs.ext4 /dev/sda3
#+end_src
** Mount and Pacstrap
#+begin_src bash
mount /dev/sda3 /mnt

#Installing base packages
pacstrap /mnt base linux linux-firmware base-devel
#+end_src
** Generating Fstab
We need to generate our filesystem table
#+begin_src bash
genfstab -U /mnt >> /mnt/etc/fstab
#+end_src
Then chroot into the fresh install
#+begin_src bash
arch-chroot /mnt
#+end_src
** Localtime, locale and extra config
I use NeoVim:
#+begin_src bash
pacman -S neovim
#+end_src
Add your own localtime
#+begin_src bash
ln -sf /usr/share/zoneinfo/America/Havana /etc/localtime
#+end_src
#+begin_src bash
hwclock --systohc
#+end_src
Look for the line #en_US.UTF-8 and uncomment
#+begin_src bash
nvim /etc/locale.gen
#+end_src
#+begin_src bash
#Generate locale
locale-gen
#+end_src
Just type your hostname, in my case it's 'arch'
#+begin_src bash
nvim /etc/hostname
#+end_src
#+begin_src bash
nvim /etc/hosts
#+end_src
Add the next lines to the file, change 'arch' for your username
#+begin_src bash
127.0.0.1   localhost
::1         localhost
127.0.1.1   arch.localdomain    arch
#+end_src
Type your SUDO password
#+begin_src bash
passwd
#+end_src
Create a new user, in my case it's gonna be named 'kr7x'
#+begin_src bash
useradd -m kr7x
passwd kr
usermod -aG wheel,audio,video,optical,storage kr
#+end_src
Make sure 'sudo' is installed
#+begin_src bash
pacman -S sudo
#+end_src
Look for the line %wheel ALL=(ALL) ALL and uncomment, also for the proxy settings persistance add this:
Defaults env_keep += "*_proxy *_PROXY"
#+begin_src bash
EDITOR=nvim visudo
#+end_src
* Grub Installation
This is not a Dual Boot Window's configuration, you will need OS_PROBER to do that
#+begin_src bash
pacman -S grub efibootmgr
mkdir /boot/EFI
mount /dev/sda1 /boot/EFI
grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
grub-mkconfig -o /boot/grub/grub.cfg
#+end_src
* Qtile Installation
We install our Xorg server and the Plasma Desktpo, we also install a few useful tools.
#+begin_src bash
<<<<<<< HEAD
pacman -S xorg git alacritty flameshot mpv emacs ark discord ntfs-3g obsidian openssh openssl stunnel telegram-desktop unzip zsh yt-dlp plasma-desktop bluedevil breeze-gtk kde-gtk-config kscreen plasma-firewall plasma-nm plasma-pa plasma-systemmonitor plasma-workspace-wallpapers powerdevil sddm-kcm xdg-desktop-portal-kde breeze-grub okular
=======
pacman -S xorg git alacritty flameshot mpv emacs qtile qtile-extras-git ranger arandr ark bluez bluez-utils brightnessctl discord dmenu dunst htop ntfs-3g obsidian openssh openssl playerctl pipewire pipewire-alsa pipewire-pulse pipewire-jack stunnel telegram-desktop thunar unzip xorg-xinit zsh yt-dlp 
>>>>>>> 991b7b6725e5dd55b52d0968b95766880662e8fb
#+end_src
* Post install
Make sure NetworkManager, SDDM and bluetooth are enabled
#+begin_src bash
systemctl enable NetworkManager
<<<<<<< HEAD
systemctl enable sddm 
=======
>>>>>>> 991b7b6725e5dd55b52d0968b95766880662e8fb
systemctl enable bluetooth
#+end_src
* Exit and Reboot
#+begin_src bash
exit
umount -R /mnt
reboot
#+end_src
